apply plugin: 'java'

description = "SI Client/Server Program"

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.json:json:20171018'
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task tcpClient(type: JavaExec) {
  description 'Client program for SI server example'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in
  main = 'tcp.Client'

  // gradle runClient -Phost=somehost -Pport=someport
  if (project.hasProperty("host") && project.hasProperty('port')) {
    args(project.getProperty('host'), project.getProperty('port'));
  }
}

task tcpServer(type: JavaExec) {
  description 'Server program for SI server example'

  classpath = sourceSets.main.runtimeClasspath
  main = 'tcp.Server'

  // gradle runClient -Pport=someport
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task udpClient(type: JavaExec) {
  description 'Client program for SI server example'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in
  main = 'udp.Client'

  // gradle runClient -Phost=somehost -Pport=someport
  if (project.hasProperty("host") && project.hasProperty('port')) {
    args(project.getProperty('host'), project.getProperty('port'));
  }
}

task udpServer(type: JavaExec) {
  description 'Server program for SI server example'

  classpath = sourceSets.main.runtimeClasspath
  main = 'udp.Server'

  // gradle runClient -Pport=someport
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}
